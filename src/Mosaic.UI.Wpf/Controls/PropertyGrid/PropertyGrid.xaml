<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Mosaic.UI.Wpf.Controls"
    xmlns:themes="clr-namespace:Mosaic.UI.Wpf.Themes"
    xmlns:converters="clr-namespace:Mosaic.UI.Wpf.Converters"
    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <!-- Bool->Visibility converter for the editor button -->
    <BooleanToVisibilityConverter x:Key="BoolToVis" />

    <!--  Define a dedicated style for the PropertyGrid TextBox editor  -->
    <Style x:Key="PropertyGridTextBoxStyle" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
        <Setter Property="Padding" Value="4"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding MaxLength}" Value="0">
                <!-- When no MaxLength is specified, use the maximum possible value -->
                <Setter Property="MaxLength" Value="2147483647" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MaxLength, Converter={x:Static converters:GreaterThanZeroConverter.Instance}}" Value="True">
                <!-- When a specific MaxLength is provided, apply it -->
                <Setter Property="MaxLength" Value="{Binding MaxLength}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  1.  The editor selector – picks the right template  -->
    <local:PropertyEditorSelector x:Key="PropertyEditorSelector" />

    <!--  2.  Editor templates  -->
    <DataTemplate x:Key="TextEditor">
        <TextBox
            local:PropertyGridValidation.PropertyItem="{Binding}"
            Style="{StaticResource PropertyGridTextBoxStyle}"
            Text="{Binding Value, UpdateSourceTrigger=LostFocus, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}" />
    </DataTemplate>

    <DataTemplate x:Key="BoolEditor">
        <CheckBox
            local:PropertyGridValidation.PropertyItem="{Binding}"
            Margin="2,2,0,2"
            VerticalAlignment="Center"
            IsEnabled="{Binding IsReadOnly, Converter={x:Static converters:InvertedBoolConverter.Instance}}"
            IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, ValidatesOnExceptions=True, NotifyOnValidationError=True}" />
    </DataTemplate>

    <DataTemplate x:Key="EnumEditor">
        <ComboBox
            local:PropertyGridValidation.PropertyItem="{Binding}"
            VerticalAlignment="Center"
            BorderThickness="0"
            IsReadOnly="{Binding IsReadOnly}"
            ItemsSource="{Binding EnumValues}"
            SelectedItem="{Binding Value, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}" />
    </DataTemplate>

    <DataTemplate x:Key="NumberEditor">
        <local:NumericTextBox
            local:PropertyGridValidation.PropertyItem="{Binding}"
            Padding="4"
            VerticalAlignment="Center"
            BorderThickness="0"
            DecimalPlaces="0"
            IsReadOnly="{Binding IsReadOnly}"
            Text="{Binding Value, UpdateSourceTrigger=LostFocus, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}" />
    </DataTemplate>

    <DataTemplate x:Key="DecimalEditor">
        <local:NumericTextBox
            local:PropertyGridValidation.PropertyItem="{Binding}"
            Padding="4"
            VerticalAlignment="Center"
            BorderThickness="0"
            DecimalPlaces="10"
            IsReadOnly="{Binding IsReadOnly}"
            Text="{Binding Value, UpdateSourceTrigger=LostFocus, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}" />
    </DataTemplate>

    <DataTemplate x:Key="DateOnlyEditor">
        <DatePicker
            local:PropertyGridValidation.PropertyItem="{Binding}"
            VerticalAlignment="Center"
            IsEnabled="{Binding IsReadOnly, Converter={x:Static converters:InvertedBoolConverter.Instance}}"
            Background="{DynamicResource {x:Static themes:MosaicTheme.ControlTextBackgroundBrush}}"
            BorderThickness="0"
            Foreground="{DynamicResource {x:Static themes:MosaicTheme.ControlTextForegroundBrush}}"
            SelectedDate="{Binding Value, UpdateSourceTrigger=LostFocus, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}" />
    </DataTemplate>

    <DataTemplate x:Key="StringListEditor">
        <Grid>
            <!-- Styled ToggleButton to look like a ComboBox -->
            <ToggleButton
                x:Name="TogglePopupButton"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                IsEnabled="{Binding IsReadOnly, Converter={x:Static converters:InvertedBoolConverter.Instance}}"
                Focusable="False">

                <!-- Visual template: border + content + chevron -->
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border
                            Background="{DynamicResource {x:Static themes:MosaicTheme.ControlTextBackgroundBrush}}"
                            BorderBrush="{DynamicResource {x:Static themes:MosaicTheme.ControlBorderBrush}}"
                            BorderThickness="1"
                            Padding="6,4"
                            SnapsToDevicePixels="True"
                            HorizontalAlignment="Stretch">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>

                                <!-- Summary text: show count or first item -->
                                <TextBlock
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Stretch"
                                    TextTrimming="CharacterEllipsis"
                                    Foreground="{DynamicResource {x:Static themes:MosaicTheme.ControlForegroundBrush}}">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} item(s)">
                                            <!-- Prefer showing a short preview: if collection empty show 'Empty', else show count -->
                                            <Binding Path="Value.Count" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>

                                <!-- Chevron arrow -->
                                <Path
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Data="M 0,0 C0,0 3.5,4 3.5,4 3.5,4 7,0 7,0 7,0 0,0 0,0 z"
                                    Fill="{DynamicResource {x:Static themes:MosaicTheme.ControlTextForegroundBrush}}" />

                            </Grid>
                        </Border>
                    </ControlTemplate>
                </ToggleButton.Template>

                <!-- Popup placed under the styled ToggleButton -->
                <Popup
                    Name="myPopup"
                    StaysOpen="False"
                    PlacementTarget="{Binding ElementName=TogglePopupButton}"
                    Placement="Bottom"
                    IsOpen="{Binding IsChecked, ElementName=TogglePopupButton, Mode=TwoWay}">
                    <Border
                        BorderThickness="1"
                        BorderBrush="{DynamicResource {x:Static themes:MosaicTheme.ControlBorderBrush}}"
                        Background="{DynamicResource {x:Static themes:MosaicTheme.WindowBackgroundBrush}}"
                        Padding="6"
                        MinWidth="250"
                        MaxWidth="500">
                        <!-- Reuse your existing editor control for the observable collection -->
                        <local:StringListEditor Items="{Binding Value}" />
                    </Border>
                </Popup>
            </ToggleButton>
        </Grid>
    </DataTemplate>

    <!--  3.  The PropertyGrid style  -->
    <Style TargetType="{x:Type local:PropertyGrid}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PropertyGrid}">
                    <Border
                        Background="{DynamicResource {x:Static themes:MosaicTheme.WindowBackgroundBrush}}"
                        BorderBrush="{DynamicResource {x:Static themes:MosaicTheme.ControlBorderBrush}}"
                        BorderThickness="1"
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <!--  Search bar  -->
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!--  Search box (optional)  -->
                            <TextBox
                                x:Name="PART_Search"
                                Margin="4"
                                Visibility="Collapsed" />

                            <!--  The list of properties  -->
                            <ScrollViewer
                                Grid.Row="1"
                                Padding="0"
                                VerticalScrollBarVisibility="Auto">
                                <ItemsControl Margin="0" ItemsSource="{TemplateBinding Properties}">
                                    <!--  Group by Category  -->
                                    <ItemsControl.GroupStyle>
                                        <GroupStyle>
                                            <GroupStyle.HeaderTemplate>
                                                <DataTemplate>
                                                    <Border
                                                        Background="{DynamicResource {x:Static themes:MosaicTheme.ControlBackgroundLightBrush}}"
                                                        BorderBrush="{DynamicResource {x:Static themes:MosaicTheme.ControlBorderBrush}}"
                                                        BorderThickness="0,0,0,1">
                                                        <TextBlock
                                                            Padding="4"
                                                            FontWeight="Bold"
                                                            Foreground="{DynamicResource {x:Static themes:MosaicTheme.ControlForegroundBrush}}"
                                                            Text="{Binding Name}" />
                                                    </Border>
                                                </DataTemplate>
                                            </GroupStyle.HeaderTemplate>
                                            <GroupStyle.Panel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Margin="0" />
                                                </ItemsPanelTemplate>
                                            </GroupStyle.Panel>
                                        </GroupStyle>
                                    </ItemsControl.GroupStyle>

                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Margin="0" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>

                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="200" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <Border
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"
                                                    Background="{DynamicResource {x:Static themes:MosaicTheme.WindowBackgroundBrush}}"
                                                    BorderBrush="{DynamicResource {x:Static themes:MosaicTheme.ControlBorderBrush}}"
                                                    BorderThickness="0,0,1,1">
                                                    <TextBlock
                                                        Margin="6,0,0,0"
                                                        VerticalAlignment="Center"
                                                        Foreground="{DynamicResource {x:Static themes:MosaicTheme.ControlForegroundBrush}}"
                                                        Text="{Binding DisplayName}"
                                                        ToolTip="{Binding Description}" />
                                                </Border>

                                                <Border
                                                    Grid.Column="1"
                                                    BorderBrush="{DynamicResource {x:Static themes:MosaicTheme.ControlBorderBrush}}"
                                                    BorderThickness="0,0,0,1">
                                                    <ContentControl
                                                        Margin="0,0,0,0"
                                                        VerticalAlignment="Center"
                                                        Content="{Binding}"
                                                        ContentTemplateSelector="{StaticResource PropertyEditorSelector}" />
                                                </Border>

                                                <Button
                                                    Grid.Column="2"
                                                    Content="..."
                                                    Padding="4,0,4,0"
                                                    ToolTip="Open Editor"
                                                    Visibility="{Binding HasEditor, Converter={StaticResource BoolToVis}}"
                                                    Command="{Binding OpenEditorCommand}" />

                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
